/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool nextOrder(TreeNode* a, TreeNode* b){
        if(!isSameStruct(a, b)){
            return false;
        }

        if(!a){
            return true;
        }
        
        if(!isSameValue(a,b)){
            return false;
        }

        return nextOrder(a->left, b->left) && nextOrder(a->right, b->right);
    }

    bool isSameValue(TreeNode* a, TreeNode* b){
        if(a->val == b->val){
            return true;
        }
        return false;
    }

    bool isSameStruct(TreeNode* a, TreeNode* b){
        if((a == NULL && b == NULL)||(a != NULL && b != NULL)){
            return true;
        }
        return false;
    }

    bool isSameTree(TreeNode* p, TreeNode* q) {
        return nextOrder(p, q);
    }
};
